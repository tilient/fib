/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.24.100
  from Fibber.fr Do not edit this file! Instead, edit the source file and recompile.
*/

import frege.run7.Func;
import frege.run7.Lazy;
import frege.run7.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="Fibber.fr", time=1484497251080L, jmajor=1, jminor=7,
  imps={
    "frege.Prelude", "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase", "frege.prelude.PreludeIO",
    "frege.prelude.PreludeList", "frege.prelude.PreludeMonad", "frege.prelude.PreludeText", "frege.java.util.Regex"
  },
  nmss={"Prelude", "PreludeArrays", "PreludeBase", "PreludeIO", "PreludeList", "PreludeMonad", "PreludeText", "Regexp"},
  symas={}, symcs={}, symis={}, symts={},
  symvs={
    @Meta.SymV(offset=103, name=@Meta.QName(pack="Fibber", base="main"), stri="s(u)", sig=1, depth=1, rkind=49),
    @Meta.SymV(offset=21, name=@Meta.QName(pack="Fibber", base="fib"), stri="s(s)", sig=3, depth=1, rkind=177)
  },
  symls={},
  taus={
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=1, subb=2), @Meta.Tau(kind=0, suba=0, subb=3),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="RealWorld")}),
    @Meta.Tau(kind=0, suba=5, subb=6),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="()")}),
    @Meta.Tau(kind=0, suba=7, subb=8),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")})
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=4), @Meta.Rho(rhofun=false, rhotau=9), @Meta.Rho(sigma=0, rhotau=1),
    @Meta.Rho(rhofun=false, rhotau=10), @Meta.Rho(sigma=2, rhotau=3)
  },
  sigmas={@Meta.Sigma(rho=0), @Meta.Sigma(rho=2), @Meta.Sigma(rho=3), @Meta.Sigma(rho=4)}, exprs={@Meta.Expr()}
)
final public class Fibber  {
  




final public static int fib(final int arg$1) {
  if (arg$1 < 3) {
    return 1;
  }
  else {
    return Fibber.fib(arg$1 - 1) + Fibber.fib(arg$1 - 2);
  }
}
final public static Func.U<RealWorld, Short> $main(final Lazy<PreludeBase.TList<String/*<Character>*/>> arg$1) {
  final Func.U<RealWorld, Short> v4801$7651 = Prelude.<Integer>println(PreludeText.IShow_Int.it, Fibber.fib(45));
  final Func.U<RealWorld, Short> v4801$7627 = Prelude.<Integer>println(PreludeText.IShow_Int.it, Fibber.fib(44));
  return new Func.U.D<RealWorld, Short>() {
        public Lazy<Short> apply(final Lazy<RealWorld> arg$7672) {
          final short v4804$7629 = (short)v4801$7627.apply(arg$7672).call();
          final Func.U<RealWorld, Short> v4805$7630 = (new Func.U.D<RealWorld, Short>() {
            public Lazy<Short> apply(final Lazy<RealWorld> arg$7668) {
              final short v4804$7653 = (short)v4801$7651.apply(arg$7668).call();
              final Func.U<RealWorld, Short> v4805$7654 = Thunk.<Func.U<RealWorld, Short>>shared(
                    new Lazy.D<Func.U<RealWorld, Short>>() {
                      public Func.U<RealWorld, Short> call() {
                        return Prelude.<Integer>println(PreludeText.IShow_Int.it, Fibber.fib(46));
                      }
                    }
                  ).call();
              return Thunk.<Short>nested(
                        new Lazy.D<Lazy<Short>>() {
                          public Lazy<Short> call() {
                            return v4805$7654.apply(arg$7668);
                          }
                        }
                      );
            }
          }).call();
          return Thunk.<Short>nested(
                    new Lazy.D<Lazy<Short>>() {
                      public Lazy<Short> call() {
                        return v4805$7630.apply(arg$7672);
                      }
                    }
                  );
        }
      };
}

  public static void main(final java.lang.String[] argv) {
    try {
      frege.run.RunTM.argv = argv;
      
        PreludeBase.TST.<Short>performUnsafe($main
               (Thunk.lazy(PreludeArrays.IListSource_JArray.<String/*<Character>*/>toList(argv)))
          ).call();
      frege.runtime.Runtime.stdout.get().close();
      frege.runtime.Runtime.stderr.get().close();

    } finally { frege.run.Concurrent.shutDownIfExists(); }
  }
}
